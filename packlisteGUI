import tkinter as tk
from tkinter import messagebox
import re

def collect_user_inputs():
    # Create the main window
    root = tk.Tk()
    root.title("Smart Travel Packing List App")

    # Function to generate packing list
    def generate_packing_list(trip_type, weather):
        base_items = ['Passport', 'Charger', 'Toiletries']
        if trip_type == 'vacation':
            base_items += ['Sunscreen', 'Swimsuit', 'Sunglasses']
        #if 'rain' in weather:
            #base_items += ['Umbrella', 'Raincoat']
        return base_items

    # Function to validate date format
    def valid_date(date):
        pattern = re.compile(r'\d{4}-\d{2}-\d{2}')
        return pattern.match(date) and len(date) == 10

    # Function to get inputs when submit button is clicked
    def on_submit():
        destination = destination_entry.get()
        departure_date = departure_date_entry.get()
        return_date = return_date_entry.get()
        trip_type = trip_type_entry.get()
        activities = activities_entry.get()
        custom_items = custom_items_entry.get()
        if not destination or not trip_type:
            messagebox.showerror("Error", "Please fill out all required fields.")
            return
        #weather = fetch_weather(destination)  # Fetch weather based on destination
        packing_list = generate_packing_list(#input)
        display_packing_list(packing_list)
        root.quit()

        # Validate input data
        if not (destination and departure_date and return_date and trip_type):
            messagebox.showerror("Error", "Please fill out all required fields.")
            return
        if not (valid_date(departure_date) and valid_date(return_date)):
            messagebox.showerror("Error", "Invalid date format. Please use YYYY-MM-DD.")
            return

        user_inputs = {
            "destination": destination,
            "departure_date": departure_date,
            "return_date": return_date,
            "trip_type": trip_type,
            "activities": activities,
            "custom_items": custom_items
        }
        print(user_inputs)  # This can be replaced with any function that processes the inputs
        root.quit()

    # Creating labels and entry widgets for each field
    tk.Label(root, text="Enter your travel destination:").pack()
    destination_entry = tk.Entry(root)
    destination_entry.pack()

    tk.Label(root, text="Enter your departure date (YYYY-MM-DD):").pack()
    departure_date_entry = tk.Entry(root)
    departure_date_entry.pack()

    tk.Label(root, text="Enter your return date (YYYY-MM-DD):").pack()
    return_date_entry = tk.Entry(root)
    return_date_entry.pack()

    tk.Label(root, text="Enter the type of trip (business, vacation, adventure):").pack()
    trip_type_entry = tk.Entry(root)
    trip_type_entry.pack()

    tk.Label(root, text="Enter activities planned (comma-separated):").pack()
    activities_entry = tk.Entry(root)
    activities_entry.pack()

    tk.Label(root, text="Add custom items (comma-separated):").pack()
    custom_items_entry = tk.Entry(root)
    custom_items_entry.pack()

    # Submit button
    submit_button = tk.Button(root, text="Submit", command=on_submit)
    submit_button.pack()

    # Start the GUI event loop
    root.mainloop()

if __name__ == "__main__":
    collect_user_inputs()
